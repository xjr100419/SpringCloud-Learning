#PropertiesFactory
#this.classToProperty.put(ILoadBalancer.class, "NFLoadBalancerClassName");
#this.classToProperty.put(IPing.class, "NFLoadBalancerPingClassName");
#this.classToProperty.put(IRule.class, "NFLoadBalancerRuleClassName");
#this.classToProperty.put(ServerList.class, "NIWSServerListClassName");
#this.classToProperty.put(ServerListFilter.class, "NIWSServerListFilterClassName");
#pay-eureka-client.ribbon.NFLoadBalancerClassName=


#CommonClientConFigKey
#指定客户端配置  与eureka结合后 就不用配置了
#pay-eureka-client.ribbon.listOfServers=localhost:8001,localhost:8002
#全局配置
#ribbon.ConnectTimeout=250

#Ribbon重试
#spring.cloud.loadbalancer.retry.enabled=true
#hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=10000
#pay-eureka-client.ribbon.ConnectTimeout=1000
#pay-eureka-client.ribbon.ReadTimeout=1000
#pay-eureka-client.ribbon.OkToRetryOnAllOperations=true
#pay-eureka-client.ribbon.MaxAutoRetriesNextServer=2
#pay-eureka-client.ribbon.MaxAutoRetries=1

#hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds：断路器的超时时间需要大于ribbon的超时时间，不然不会触发重试。
#pay-eureka-client.ribbon.ConnectTimeout：请求连接的超时时间
#pay-eureka-client.ribbon.ReadTimeout：请求处理的超时时间
#pay-eureka-client.ribbon.OkToRetryOnAllOperations：对所有操作请求都进行重试
#pay-eureka-client.ribbon.MaxAutoRetriesNextServer：切换实例的重试次数
#pay-eureka-client.ribbon.MaxAutoRetries：对当前实例的重试次数


#spring.rabbitmq.addresses=192.168.1.1
#spring.rabbitmq.port=5672
#spring.rabbitmq.username=test
#spring.rabbitmq.password=password
#spring.rabbitmq.virtualHost=/test


#以下feign

# ribbon指定服务的配置
#重试
spring.cloud.loadbalancer.retry=false
#pay-eureka-client.ribbon.OkToRetryOnAllOperations=false
pay-eureka-client.ribbon.ReadTimeout=1000

# ribbon默认配置
#ribbon.ConnectTimeout=250
#ribbon.ReadTimeout=2000
#ribbon.OkToRetryOnAllOperations=true
#ribbon.MaxAutoRetriesNextServer=0
#ribbon.MaxAutoRetries=0




# hystrix的默认配置
#hystrix.command.default.execution.isolation.strategy = THREAD
hystrix.command.default.execution.timeout.enabled=true
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=2000

# hystrix指定Commandkey的配置  hello方法名
#hystrix.command.hello.execution.isolation.thread.timeoutInMilliseconds=5000

# feign日志配置  ，还要设置 @Bean Logger.Level
logging.level.com.pay.api.DcClient=DEBUG


#以下stream
spring.rabbitmq.addresses=192.168.88.128
spring.rabbitmq.port=5672
spring.rabbitmq.username=springcloud
spring.rabbitmq.password=19860614

#spring.cloud.stream.rabbit.bindings.test.consumer.prefix=z
#spring.cloud.stream.bindings.input.group=default


#spring.cloud.stream.kafka.binder.brokers=192.168.3.217:9092
#spring.cloud.stream.kafka.binder.zk-nodes=192.168.3.217:2181